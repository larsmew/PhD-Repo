[
["index.html", "PhD Book Welcome", " PhD Book Welcome Welcome! This website contains some of the stuff that I have been working on and generated during my PhD work. "],
["introduction.html", "1 Introduction", " 1 Introduction "],
["side-projects.html", "2 Side projects 2.1 Haplotype Project", " 2 Side projects Topics in this category describes some of the side projects I have been during - related to but not part of - my PhD project. 2.1 Haplotype Project Updated: 15-01-2017 2.1.1 Background and Idea 2+2 #&gt; [1] 4 2.1.2 Data This section describes the raw data # Read onco phenotype data brca_data &lt;- read_excel(&quot;Onco_pheno_BC1_Example.xlsx&quot;) brca_data[, 1:10] #&gt; # A tibble: 8 × 10 #&gt; FamCode Onc_ID Country Ascertainment Mut1Gene Mut1BIC Mut1HGVS #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; #&gt; 1 1 1 ITALY 1 1 1135delA c.1016delA #&gt; 2 2 2 ITALY 1 1 1135delA c.1016delA #&gt; 3 3 3 NETHERLANDS 1 1 1135delA c.1016delA #&gt; 4 3 4 NETHERLANDS 1 1 1135delA c.1016delA #&gt; 5 4 5 USA 1 1 1135delA c.1016delA #&gt; 6 4 6 USA 1 1 1135delA c.1016delA #&gt; 7 5 7 AUSTRIA 1 1 1135delA c.1016delA #&gt; 8 6 8 AUSTRIA 1 1 1135delA c.1016delA #&gt; # ... with 3 more variables: Mut1HGVS_Protein &lt;chr&gt;, Mut1Type &lt;chr&gt;, #&gt; # Mut1Effect &lt;chr&gt; # read SNP information haplotypes_brca &lt;- read.table(&quot;haplotypes_brca1_example.txt&quot;, header = T) haplotypes_brca[1:10, c(1,2,10,15, 55)] #&gt; SNP X1KG_13_37679380 c13_pos31809263 c13_pos31826936 c17_pos50397016 #&gt; 1 16 DD AA AA GG #&gt; 2 12 DD AA AA GG #&gt; 3 133 DD AA AA CG #&gt; 4 162 DD AA AA GG #&gt; 5 142 DD AA AA CG #&gt; 6 262 DD AA AA CG #&gt; 7 492 DD AA AA CC #&gt; 8 302 DD AA AA GG #&gt; 9 65 DD AA AA CG #&gt; 10 42 DD AA AA GG # Read SNP location information chr_coords &lt;- read.table(&quot;qry_139_ouh_geno_snps_with_position.txt&quot;, header = T, sep = &quot;,&quot;) head(chr_coords) #&gt; SNP Chr_numeric position_b37 #&gt; 1 X1KG_13_37679380 13 37679380 #&gt; 2 X1KG_17_40911775 17 40911775 #&gt; 3 X1KG_17_45479497 17 45479497 #&gt; 4 c13_pos27783810 13 28885810 #&gt; 5 c13_pos31788625 13 31788625 #&gt; 6 c13_pos31791426 13 32893426 # Define BRCA1 gene information brca_start &lt;- 41197695 brca_stop &lt;- 41276113 brca_middle &lt;- (brca_stop - brca_start)/2 + brca_start brca_chr &lt;- 17 2.1.3 Methods Filter out SNPs for relating to the chromosome we're working on 2.1.4 Implementation The extractSamples method… extractSamples &lt;- function(brca_data, haplotypes_brca, distinct = F){ &quot; Extract relevant samples from table of all genotypes &quot; # Keep only one member of a family and remove the others, if chosen if (distinct){ brca_data &lt;- brca_data[!duplicated(brca_data$FamCode), ] # Equivalent to above # brca_data &lt;- subset(brca_data, !duplicated(FamCode)) # brca_data &lt;- distinct(brca_data, FamCode, .keep_all = T) } # Extract samples (with given brca mutation) from the big haplotypes dataset # Faster to use fmatch than match index &lt;- fmatch(brca_data$Onc_ID, haplotypes_brca$SNP) matched &lt;- haplotypes_brca[index, ] # as above, but slower # matched &lt;- filter(haplotypes_brca, SNP %in% brca_data$Onc_ID) return(matched) } # Example matched &lt;- extractSamples(brca_data, haplotypes_brca, FALSE) matched[1:10, c(2,10,15, 55)] #&gt; X1KG_13_37679380 c13_pos31809263 c13_pos31826936 c17_pos50397016 #&gt; 2572 DD AA AA CG #&gt; 2586 DD AA AA CG #&gt; 2600 DD AA AA GG #&gt; 2573 DD AA AA GG #&gt; 2580 DD AA AA GG #&gt; 2587 DD AA AA GG #&gt; 2592 DD AA AA GG #&gt; 2596 DD AA AA CG #&gt; 2564 DD AA AA CG #&gt; 2574 DD AA AA GG dim(matched) #&gt; [1] 15679 12468 ### Haplotypes samples with a given brca mutation ### haplotype_mutation &lt;- function(brca_data, haplotypes_brca, chr_coords, brca_start, brca_stop, brca_middle, brca_chr, mut, distinct = F){ # TODO # - allow for country to define haplotype_consensus # Prints for checking output print(dim(brca_data)) # 8x67 print(dim(haplotypes_brca)) # 15679x12468 print(dim(chr_coords)) # 12467x3 print(mut) # Make brca_data a global variable (for testing and debugging) brca_data_temp &lt;&lt;- brca_data brca_data &lt;&lt;- brca_data_temp matched &lt;&lt;- extractSamples(brca_data, haplotypes_brca, distinct) chr_coords2 = filter(chr_coords, chr_coords$Chr_numeric == brca_chr) matched &lt;- select(matched, na.omit(fmatch(colnames(matched[2:ncol(matched)]), chr_coords2$SNP))) # matched &lt;- matched[, na.omit(fmatch(colnames(matched[2:ncol(matched)]), chr_coords2$SNP))] haplotypes &lt;&lt;- findConsensus(matched) # haplotypes &lt;&lt;- findConsensus(filter(matched, SNP %in% subset(brca_data, Country == &quot;SPAIN&quot;)$Onc_ID)) breaks &lt;&lt;- findHaplotypeBreaks(matched, haplotypes) if (length(breaks) == 0){ print(paste(&quot;No haplotype breaks found in families for mutation:&quot;, mut)) return() } chr_pos &lt;&lt;- mapSNPs(breaks, chr_coords, brca_middle, brca_start, brca_stop, brca_chr) #chr_pos &lt;- mapSNPs(breaks, chr_coords, brca1_middle, brca1_start, brca1_stop) #chr_pos &lt;- mapSNPs() save(chr_pos, file = paste0(&quot;chr_pos-&quot;, brca_name, &quot;-&quot;, paste(mut, collapse = &quot;,&quot;), &quot;.RData&quot;)) plot_haplotype(chr_pos, brca_chr, mut) findNearestBreaks(chr_pos) } 2.1.5 Results "]
]
